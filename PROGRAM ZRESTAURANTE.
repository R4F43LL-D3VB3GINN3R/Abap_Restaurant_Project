PROGRAM ZRESTAURANTE.

"----------------------------------------------------------------------

"                [TABELA TRANSPARENTE: ZRESTEMPLOYEE]                 "

"ID_GERENTE       TYPE ZIDGER CHAVE PRIMÁRIA -> ID
"CARGO            TYPE ZGERENTE              -> CARGO
"FUNCIONARIO      TYPE ZFUNCIONARIO          -> NOME
"DATA_CONTRATACAO TYPE ZDATACONTR            -> DATA DA CONTRATAÇÃO
"SEXO             TYPE ZSEXF                 -> SEXO
"IDADE            TYPE ZIDADEF               -> IDADE
"ORDENADO         TYPE ZORDENADO             -> ORDENADO OU SALÁRIO
"DESCRICAO        TYPE ZDESCR                -> OBSERVAÇÕES
"PAGAMENTO        TYPE ZPAGAMENTO            -> PAGAMENTO

"----------------------------------------------------------------------

TYPES WA_EMP TYPE ZRESTEMPLOYEE.                 "ESTRUTURA GLOBAL DO TIPO DA MINHA TABELA TRANSPARENTE
DATA  LS_EMP TYPE WA_EMP.                        "ESTRUTURA LOCAL DO TIPO DA MINHA ESTRUTURA GLOBAL
DATA  LT_EMP TYPE TABLE OF ZRESTEMPLOYEE.        "TABELA INTERNA DO TIPO DA MINHA TABELA TRANSPARENTE..

DATA: OKCODE_100 TYPE SY-UCOMM, "VARIÁVEL DO TIPO COMANDO DE FUNÇÃO DYNPRO PARA TELA 100
      OKCODE_200 TYPE SY-UCOMM, "VARIÁVEL DO TIPO COMANDO DE FUNÇÃO DYNPRO PARA TELA 200
      OKCODE_300 TYPE SY-UCOMM. "VARIÁVEL DO TIPO COMANDO DE FUNÇÃO DYNPRO PARA TELA 300

"----------------------------------------------------------------------

*&---------------------------------------------------------------------*
*& Module ANTES_DO_LOGIN_0100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE ANTES_DO_LOGIN_0100 OUTPUT.

* SET PF-STATUS 'xxxxxxxx'.
* SET TITLEBAR 'xxx'.

  DATA:
    IN1 TYPE C LENGTH 10, "LOGIN DO PROGRAMA NA TELA 100
    IN2 TYPE C LENGTH 10. "SENHA DO PROGRAMA NA TELA 100

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  DEPOIS_DO_LOGIN_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE DEPOIS_DO_LOGIN_0100 INPUT.

  CASE OKCODE_100.                         "EM CASO DE OKCODE_100...
    WHEN 'FCT_ENTRAR'.                     "E QUANDO O BOTÃO ENTRAR FOR PRESSIONADO...
      IF IN1 EQ 'ADMIN0' AND IN2 EQ '000'. "E SE O LOGIN FOR IGUAL A ADMIN0 JUNTAMENTE COM A SENHA IGUAL A 000...
        CALL SCREEN '200'.                 "IR PARA A TELA 100.
      ENDIF.
    WHEN 'FCT_SAIR'.                       "E QUANDO O BOTÃO SAIR FOR PRESSIONADO...
      LEAVE PROGRAM.                       "SAIR DO PROGRAMA.
  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*& Module ANTES_DE_SELECIONAR OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE ANTES_DE_SELECIONAR OUTPUT.
* SET PF-STATUS 'xxxxxxxx'.
* SET TITLEBAR 'xxx'.

ENDMODULE.


*&---------------------------------------------------------------------*
*&      Module  DEPOIS_DE_SELECIONAR  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE DEPOIS_DE_SELECIONAR INPUT.

  CASE OKCODE_200.         "EM CASO DE OKCODE_200...
    WHEN 'FCT_SAIR2'.      "E QUANDO O BOTÃO SAIR FOR PRESSIONADO...
      LEAVE PROGRAM.       "SAIR DO PROGRAMA.
    WHEN 'FCT_CADASTRAR2'. "E QUANDO O BOTÃO CADASTRAR FOR PRESSIONADO...
      CALL SCREEN '300'.   "IR PARA A TELA 300.
  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*& Module ANTES_DO_CADASTRO_300 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE ANTES_DO_CADASTRO_300 OUTPUT.
* SET PF-STATUS 'xxxxxxxx'.
* SET TITLEBAR 'xxx'.

  "TODOS OS INPUTS DA TELA 300 RECEBEM O MESMO TIPO DE ELEMENTO DE DADOS DA MINHA TABELA TRANSPARENTE."

  DATA:   IN1_3 TYPE ZGERENTE,      "CARGO"
          IN2_3 TYPE ZFUNCIONARIO,  "NOME"
          IN3_3 TYPE ZDATACONTR,    "DATA"
          IN4_3 TYPE ZSEXF,         "SEXO"
          IN5_3 TYPE ZIDADEF,       "IDADE"
          IN6_3 TYPE ZORDENADO,     "ORDENADO"
          IN7_3 TYPE ZDESCR.        "OBSERVAÇÕES"

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  DEPOIS_DE_CADASTRAR_300  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE DEPOIS_DE_CADASTRAR_300 INPUT.

  CASE OKCODE_300.         "EM CASO DE OKCODE_300...
    WHEN 'FCT_SAIR3'.      "E QUANDO O BOTÃO SAIR FOR PRESSIONADO...
      LEAVE PROGRAM.       "SAIR DO PROGRAMA.
    WHEN 'FCT_VOLTAR3'.    "E QUANDO O BOTÃO VOLTAR FOR PRESSIONADO...
      CALL SCREEN '200'.   "IR PARA A TELA 200.
    WHEN 'FCT_CADASTRAR3'. "E QUANDO O BOTÃO CADASTRAR FOR PRESSIONADO...

      LS_EMP-CARGO = IN1_3.            "CARGO DA MINHA ESTRUTURA RECEBE O CARGO DA TELA 300."
      LS_EMP-FUNCIONARIO = IN2_3.      "FUNCIONARIO DA MINHA ESTRUTURA RECEBE O FUNCIIONARIO DA TELA 300."
      LS_EMP-DATA_CONTRATACAO = IN3_3. "DATA DE CONTRATACAO DA MINHA ESTRUTURA RECEBE A DATA DA TELA 300."
      LS_EMP-SEXO = IN4_3.             "SEXO DA MINHA ESTRUTURA RECEBE O SEXO DA TELA 300."
      LS_EMP-IDADE = IN5_3.            "IDADE DA MINHA ESTRUTURA RECEBE A IDADE DA TELA 300."
      LS_EMP-ORDENADO = IN6_3.         "ORDENADO DA MINHA ESTRUTURA RECEBE O ORDENADO DA TELA 300."
      LS_EMP-DESCRICAO = IN7_3.        "DESCRICAO DA MINHA ESTRUTURA RECECEBE A DESCRICAO DA TELA 300."

      APPEND LS_EMP TO LT_EMP.         "INSERIR A MINHA ESTRUTURA NA MINHA TABELA INTERNA."

  ENDCASE.

  BREAK-POINT.

ENDMODULE.
